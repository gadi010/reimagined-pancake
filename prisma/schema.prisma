// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
  previewFeatures = ["referentialActions"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  name          String
  avatar        String?
  work          Work[]
  projects      Project[]
  providers     Provider[]
  workAssignees WorkAssignee[]
  memberOf      ProjectMember[]
}

model Provider {
  id          Int    @id @default(autoincrement())
  name        String
  accessToken String
  email       String @unique
  userId      Int
  user        User   @relation(fields: [userId], references: [id])
}

model ProjectMember {
  id        Int     @id @default(autoincrement())
  project   Project @relation(fields: [projectId], references: [id])
  projectId Int
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  role      String?
}

model Project {
  id          Int             @id @default(autoincrement())
  title       String
  description String
  createdBy   User            @relation(fields: [createdById], references: [id])
  createdById Int
  members     ProjectMember[]
  works       Work[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model Work {
  id          Int            @id @default(autoincrement())
  title       String
  description String?
  type        String
  project     Project        @relation(fields: [projectId], references: [id])
  projectId   Int
  createBy    User           @relation(fields: [createById], references: [id])
  createById  Int
  assignees   WorkAssignee[]
  status      String         
  progress    Int?            @default(0) // 0-100 for progress bar
  attachments Attachment[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model WorkAssignee {
  id     Int    @id @default(autoincrement())
  work   Work   @relation(fields: [workId], references: [id], onDelete: Cascade)
  workId Int
  user   User   @relation(fields: [userId], references: [id])
  userId Int
  role   String
}

model Attachment {
  id        Int      @id @default(autoincrement())
  work      Work     @relation(fields: [workId], references: [id], onDelete: Cascade)
  workId    Int
  url       String
  filename  String
  createdAt DateTime @default(now())
}

// model Chat {
//   id        Int      @id @default(autoincrement())
//   work      Work     @relation(fields: [workId], references: [id])
//   workId    Int
//   sender    User     @relation(fields: [senderId], references: [id])
//   senderId  Int
//   message   String
//   createdAt DateTime @default(now())
// }

